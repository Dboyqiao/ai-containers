services:
## Base
  base:
    # environment:
    #   ENV_NAME: ENV_VALUE
    # env_file:
    #   - ./base/config/base.env
    #   - ./base/config/${BASE_IMAGE_NAME}.env
    image: ${FINAL_IMAGE_NAME}:${TF_PACKAGE_VERSION}-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
    build:
      context: ./base
      args:
        BASE_IMAGE_NAME: debian
        BASE_IMAGE_TAG: ${BASE_IMAGE_TAG}
        TF_PACKAGE: ${TF_PACKAGE}
        TF_PACKAGE_VERSION: ${TF_PACKAGE_VERSION}
      dockerfile: Dockerfile.${BASE_IMAGE_NAME}
    healthcheck:
      test: python -c 'import tensorflow as tf; print(tf.__version__)' || exit 1
      interval: 10s
      timeout: 30s
      retries: 10
      start_period: 2m
    command: >
        sh -c "python -c 'import tensorflow as tf; print(tf.__version__)'"

## Jupyter
  jupyter:
    image: ${FINAL_IMAGE_NAME}:${TF_PACKAGE_VERSION}-jupyter-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
    build:
      context: ./jupyter
      args:
        BASE_IMAGE_NAME: ${FINAL_IMAGE_NAME}
        BASE_IMAGE_TAG: ${TF_PACKAGE_VERSION}-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
    depends_on:
      base:
        condition: service_healthy

## OpenMPI
  openmpi:
    image: ${FINAL_IMAGE_NAME}:${TF_PACKAGE_VERSION}-openmpi-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
    build:
      context: ./horovod
      dockerfile: Dockerfile.openmpi
      args:
        BASE_IMAGE_NAME: ${FINAL_IMAGE_NAME}
        BASE_IMAGE_TAG: ${TF_PACKAGE_VERSION}-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
    depends_on:
      base:
        condition: service_healthy

## MPICH
  mpich:
    image: ${FINAL_IMAGE_NAME}:${TF_PACKAGE_VERSION}-mpich-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
    build:
      context: ./horovod
      dockerfile: Dockerfile.mpich
      args:
        BASE_IMAGE_NAME: ${FINAL_IMAGE_NAME}
        BASE_IMAGE_TAG: ${TF_PACKAGE_VERSION}-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
    depends_on:
      base:
        condition: service_healthy

## OpenMPI+Horovod Devel
  openmpi-horovod-dev:
    image: ${FINAL_IMAGE_NAME}:${TF_PACKAGE_VERSION}-openmpi-horovod-dev-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
    build:
      context: ./horovod
      target: dev
      args:
        BASE_IMAGE_NAME: ${FINAL_IMAGE_NAME}
        BASE_IMAGE_TAG: ${TF_PACKAGE_VERSION}-openmpi-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
        HOROVOD_VERSION: v0.24.3
    depends_on:
      openmpi:
        condition: service_healthy

## MPICH+Horovod Devel
  mpich-horovod-dev:
    image: ${FINAL_IMAGE_NAME}:${TF_PACKAGE_VERSION}-mpich-horovod-dev-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
    build:
      context: ./horovod
      target: dev
      args:
        BASE_IMAGE_NAME: ${FINAL_IMAGE_NAME}
        BASE_IMAGE_TAG: ${TF_PACKAGE_VERSION}-mpich-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
        HOROVOD_VERSION: v0.24.3
    depends_on:
      mpich:
        condition: service_healthy

## OpenMPI+Horovod Prod
  openmpi-horovod:
    image: ${FINAL_IMAGE_NAME}:${TF_PACKAGE_VERSION}-openmpi-horovod-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
    build:
      context: ./horovod
      target: prod
      args:
        BASE_IMAGE_NAME: ${FINAL_IMAGE_NAME}
        BASE_IMAGE_TAG: ${TF_PACKAGE_VERSION}-openmpi-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
        HOROVOD_VERSION: v0.24.3
        PYTHON: python3.9
    depends_on:
      openmpi:
        condition: service_healthy

## MPICH+Horovod Prod
  mpich-horovod:
    image: ${FINAL_IMAGE_NAME}:${TF_PACKAGE_VERSION}-mpich-horovod-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
    build:
      context: ./horovod
      target: prod
      args:
        BASE_IMAGE_NAME: ${FINAL_IMAGE_NAME}
        BASE_IMAGE_TAG: ${TF_PACKAGE_VERSION}-mpich-${BASE_IMAGE_NAME}-${BASE_IMAGE_TAG}
        HOROVOD_VERSION: v0.24.3
        PYTHON: python3.9
    depends_on:
      mpich:
        condition: service_healthy

