# Copyright (c) 2024 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: "kubeflow.org/v1"
kind: PyTorchJob
metadata:
  name: {{ .Values.metadata.name }}
  namespace: {{ .Values.metadata.namespace }}
spec:
  pytorchReplicaSpecs:
    Master:
      replicas: 1
      template:
        spec:
          containers:
            - name: pytorch
              image: "{{ .Values.imageName }}:{{ .Values.imageTag }}"
              imagePullPolicy: Always
              command:
                - torchrun
                - myscript.py
              resources:
                limits:
                  cpu: {{ .Values.masterResources.cpu }}
                  memory: {{ .Values.masterResources.memory }}
              volumeMounts:
              - name: dataset-dir
                mountPath: /tmp/output
          volumes:
          - name: dshm
            emptyDir:
              medium: Memory
          - name: dataset-dir
            persistentVolumeClaim:
              claimName: {{ .Values.pvcName }}
    Worker:
      replicas: {{ .Values.workers }}
      template:
        spec:
          containers:
            - name: pytorch
              image: "{{ .Values.imageName }}:{{ .Values.imageTag }}"
              imagePullPolicy: Always
              envFrom:
              - configMapRef:
                  name: intel-proxy-config
              command:
                - torchrun
                - myscript.py
              resources:
                limits:
                  cpu: {{ .Values.workerResources.cpu }}
                  memory: {{ .Values.workerResources.memory }}
              volumeMounts:
              - name: dataset-dir
                mountPath: /tmp/output
          volumes:
          - name: dshm
            emptyDir:
              medium: Memory
          - name: dataset-dir
            persistentVolumeClaim:
              claimName: {{ .Values.pvcName }}
