name: Build Module
on: 
  workflow_call:
    inputs:
      dir: 
        required: true
        type: string
      env_overrides: 
        required: false
        type: string

jobs:
  setup-build-matrix:
    runs-on: [ aia-devops ]
    container:
      image: ${{ vars.REGISTRY }}/aiops/compose-dev
      env:
        http_proxy: ${{ secrets.HTTP_PROXY }}
        https_proxy: ${{ secrets.HTTPS_PROXY }}
        no_proxy: ${{ secrets.NO_PROXY }}
      credentials:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Set Matrix
        id: matrix
        run: echo "matrix=$(jq -c . < ./${{ inputs.dir }}/.actions.json)" >> $GITHUB_OUTPUT
  build-containers:
    needs: [setup-build-matrix]
    container:
      image: ${{ vars.REGISTRY }}/aiops/compose-dev
      env:
        http_proxy: ${{ secrets.HTTP_PROXY }}
        https_proxy: ${{ secrets.HTTPS_PROXY }}
        no_proxy: ${{ secrets.NO_PROXY }}
      credentials:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    env: ${{ matrix }}
    strategy:
      matrix: ${{ fromJson(needs.setup-build-matrix.outputs.matrix) }}
      fail-fast: false
    runs-on: [ aia-devops ]
    steps: 
    - uses: actions/checkout@v3
    - uses: docker/login-action@v2 # To prevent rate limiting
      with:
        username: ${{ secrets.HUB_USER }}
        password: ${{ secrets.HUB_TOKEN }}
    - uses: docker/login-action@v2
      with:
        registry: ${{ vars.REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    - name: Print Inputs
      run: echo -e "${{ inputs.dir }}\n${{ inputs.env_overrides }}" >> $GITHUB_STEP_SUMMARY
    - name: Remove Containers
      run: docker compose down
      working-directory: ${{ inputs.dir }}
    - name: Build Containers
      run: |
        REGISTRY=${{ vars.REGISTRY }} \
        ${{ inputs.env_overrides }} docker compose up --build --force-recreate
      working-directory: ${{ inputs.dir }}
    - name: Push Containers
      run: |
        REGISTRY=${{ vars.REGISTRY }} \
        ${{ inputs.env_overrides }} docker compose push --ignore-push-failures
      working-directory: ${{ inputs.dir }}
